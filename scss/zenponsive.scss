@import 'zenponsive-mixins';

/**
* Zenponsive – Responsive CSS Grid - Float
* @author Malte Müller (acrylian) <info@maltem.de>
* @copyright 2015 Malte Müller
* @license GPL v3 or later
* @version: 1.4
*/

@import 'zenponsive-base';

/* The columns generally
------------------------------------------------*/
*[class^='#{$prefix}col'] {
	height: auto;
	margin: 0; /* Don't change this because then the widths will not work */
	position: relative; /* needed so you can relatively/absolutely position elements within these */
	float: left; 
	display: inline-block;
	word-wrap: break-word; /* So longer words don't break the width  */
}

/* The columns without gutter
------------------------------------------------*/
@include grid12('', 'float');
@include grid5('', 'float'); 

/* The columns with 2% gutter 	
------------------------------------------------*/

@include grid12_gutter(2,'', 'float');
@include grid5_gutter(2,'', 'float');

/* The columns with  4% gutter
------------------------------------------------*/

@include grid12_gutter(4,'', 'float');
@include grid5_gutter(4,'', 'float');

/* Responsive images
------------------------------------------------*/
img {
	width: auto; 
	max-width: 100%;
	height: auto;
	border: 0;
	display: block;
}

/* General clear float to start a row of other column sizes All and IE8+
	------------------------------------------------------------------------
	Zenponsive does not require to define rows by default if you for example use square cropped image thumbs. 
	However to avoid some CSS issues with items of different height in different rows 
	you can use.row as a wrapper if necessary. 
	If you change columns per breakpoint the wrapper might not be useful,
	then use .floatclear/.floatclearXXX to mark the first item in the row to 
	clear the floating before it properly
----------------------------------------------------------------------------------------*/
.#{$prefix}row:before, 
.#{$prefix}row:after,
.#{$prefix}clearfix:before, 
.#{$prefix}clearfix:after {
	content: " " !important;
	display: table !important;
}

.#{$prefix}row:after,
.#{$prefix}floatclear,
.#{$prefix}clearfix:after {
	clear: both !important;
}

.#{$prefix}row,
.#{$prefix}clearfix { /* IE6/7 only */
	*zoom: 1;
}

.#{$prefix}floatright { 
	float: right !important;  
}

/* Hide elements initially
------------------------------------------------*/
.#{$prefix}hide { 
	display: none !important; 
}
.#{$prefix}show { 
	display: block !important; 
}
.#{$prefix}invisible { 
	visibility: hidden !important; 
}
.#{$prefix}visible { 
	visibility: visible !important; 
}


/* Responsive breakpoints
------------------------------------------------*/
/* Bigger desktop */
@media only screen and (max-width: 1280px) {
	
	/** 
	 * Extra classed to override the default col12 set above on this width breakpoint
	 * without and with gutter
	 */
	
	/* No gutter */
	@include grid12($break1, 'float');
	@include grid5($break1, 'float');
	
	/* 2% gutter */
	@include grid12_gutter(2,$break1, 'float');
	@include grid5_gutter(2,$break1, 'float');
	
	/* 4% gutter */
	@include grid12_gutter(4,$break1, 'float');
	@include grid5_gutter(4,$break1, 'float');
	
	/* Various helpers */
	.#{$prefix}floatclear, 
	.#{$prefix}floatleft1280 { 
		clear: none !important; 
	}
	.#{$prefix}floatright1280 { 
		float: right !important; 
	}
	.#{$prefix}floatclear1280 { 
		clear: both !important; 
	}
	
	@include show_hide(1280);
} 

/* "Standard" desktop */
@media only screen and (max-width: 960px) { 
	
	/** 
	 * Extra classed to override the default col12 set above on this width breakpoint
	 * without and with gutter
	 */
	
	/* No gutter */
	@include grid12($break2, 'float');
	@include grid5($break2, 'float');
	
	/* 2% gutter */
	@include grid12_gutter(2,$break2, 'float');
	@include grid5_gutter(2,$break2, 'float');
	
	/* 4% gutter */
	@include grid12_gutter(4,$break2, 'float');
	@include grid5_gutter(4,$break2, 'float');

	/* various helpers */
	.#{$prefix}floatclear, 
	.#{$prefix}floatleft959 { 
		clear: none !important; 
	}
	.#{$prefix}floatright959 { float: right !important; }
	.#{$prefix}floatclear959 { clear: both !important; }
	
	@include show_hide(959);
}

/* Tablet */
@media only screen and (max-width: 767px) {
	
	/** 
	 * Extra classed to override the default col12 set above on this width breakpoint
	 */
	/* No gutter */
	@include grid12($break3, 'float');
	@include grid5($break3, 'float');
	
	/* 2% gutter */
	@include grid12_gutter(2,$break3, 'float');
	@include grid5_gutter(2,$break3, 'float');
	
	/* 4% gutter */
	@include grid12_gutter(4,$break3, 'float');
	@include grid5_gutter(4,$break3, 'float');
	
	/* various helpers */
	.#{$prefix}floatclear,
	.#{$prefix}floatclear1280,
	.#{$prefix}floatclear959,
	.#{$prefix}floatleft767 {
		clear: none !important;
	}
	.#{$prefix}floatright767 { float: right !important; }
	.#{$prefix}floatclear767 { clear: both !important; }

	@include show_hide(767);
}

/* Mobile */
@media only screen and (max-width: 479px) {
	
	/* No gutter - Columns are always set to full width on this width breakpoint */
	
	*[class^='#{$prefix}col'] {
		width: 100% !important;
	}
	/* 2% gutter */
	.#{$prefix}gutter2 > *[class^='#{$prefix}col'] {
		width: 98% !important;
	}
	/* 4% gutter */
	.#{$prefix}gutter4 > *[class^='#{$prefix}col'] {
		width: 96% !important;
	}
	
	/* % gutter */
	@include grid12($break4, 'float');
	@include grid5($break4, 'float');
	
	/* 2% gutter */
	@include grid12_gutter(2,$break4, 'float');
	@include grid5_gutter(2,$break4, 'float');
	
	/* 4% gutter */
	@include grid12_gutter(4,$break4, 'float');
	@include grid5_gutter(4,$break4, 'float');
	
	/* various helpers */
	.zp-floatclear,
	.zp-floatclear1280,
	.zp-floatclear959,
	.zp-floatclear767,
	.zp-floatleft479 {
		clear: none !important;
	}
	.zp-floatright479 { float: right !important; }
	.zp-floatclear479 { clear: both !important; }
	.zp-clearblock479 { display: inline !important; width: auto !important; }

	@include show_hide(479);
}